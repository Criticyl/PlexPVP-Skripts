options:
	prefix: &d&lCLANS &8Â»

# {playerclan::%{_uuid}%}
function createclan(name: text, p: player):
	set {_uuid} to uuid of {_p}
	if {playerclan::%{_uuid}%} is not set:
		if {_name} matches "[a-zA-Z]+":
			if length of {_name} is between 3 and 8:
				if {clanList::*} does not contain {_name}:
					set {playerclan::%{_uuid}%} to {_name}
					set {clanMaxMembers.%{playerclan::%{_uuid}%}%} to 3
					set {clanMembers.%{playerclan::%{_uuid}%}%} to 1
					set {clanLevel.%{playerclan::%{_uuid}%}%} to 1
					set {clanXp.%{playerclan::%{_uuid}%}%} to 0
					set {clanXpRequired.%{playerclan::%{_uuid}%}%} to 1000
					add {_p} to {clanMembersList.%{playerclan::%{_uuid}%}%::*}
					set {clanLeader.%{playerclan::%{_uuid}%}%} to {_p}
					set {clanPoints.%{playerclan::%{_uuid}%}%} to 100
					set {clanXpPerMin.%{playerclan::%{_uuid}%}%} to 5
					set {unlockedPvpToggle.%{playerclan::%{_uuid}%}%} to false
					set {clanPVP.%{playerclan::%{_uuid}%}%} to false
					set {%{_uuid}%.clanChat.%{playerclan::%{_uuid}%}%} to false
					set {%{_uuid}%.playerTotalclanXp.%{playerclan::%{_uuid}%}%} to 0
					add {_name} to {clanList::*}
					updateScoreboard({_p})
					send "{@prefix} &7You have created a clan named &d%{_name}%" to {_p}
					
				else:
					send "{@prefix} &7This clan already exists!" to {_p}
			else:
				send "{@prefix} &7Your clan name must be between 3 and 8 characters!" to {_p}				
		else:
			send "{@prefix} &7Your clan name must be alphabetical!" to {_p}
	else:
		send "{@prefix} &7You are already in another clan!" to {_p}

function updateLog(g: object, t: text):
	add {_t} to {log.%{_g}%::*}
	set {_size} to size of {log.%{_g}%::*}-9
	set {_count} to 0
	set {log.output.%{_g}%} to "&7"
	loop {log.%{_g}%::*}:
		add 1 to {_count}
		if {_count} >= {_size}:
			set {log.output.%{_g}%} to "%{log.output.%{_g}%}%||%loop-value%"
	set {log.output.%{_g}%} to "%{log.output.%{_g}%}%||&7"
	

function deleteclan(p: player):
	set {_uuid} to uuid of {_p}
	set {_name} to {playerclan::%{_uuid}%}
	if {playerclan::%{_uuid}%} is set:
		if {clanLeader.%{playerclan::%{_uuid}%}%} is {_p}:
			remove {_name} from {clanList::*}
			delete {clanMaxMembers.%{playerclan::%{_uuid}%}%}
			delete {clanMembers.%{playerclan::%{_uuid}%}%}
			delete {clanLevel.%{playerclan::%{_uuid}%}%}
			delete {clanXp.%{playerclan::%{_uuid}%}%}
			delete {clanXpRequired.%{playerclan::%{_uuid}%}%}
			delete {clanLeader.%{playerclan::%{_uuid}%}%}
			delete {clanPoints.%{playerclan::%{_uuid}%}%}
			delete {clanPVP.%{playerclan::%{_uuid}%}%}
			delete {clanXpPerMin.%{playerclan::%{_uuid}%}%}
			delete {clanXpPerMin.%{_name}%}
			delete {unlockedPvpToggle.%{_name}%}
			delete {clanAdmin.%{_name}%::*}
			delete {log.output.%{_name}%}
			delete {log.%{_name}%::*}
			delete {playerclan::%{_uuid}%}
			loop {clanMembersList.%{_name}%::*}:
				send "{@prefix} &7Your clan has been deleted!" to loop-value
				updateScorebard(loop-value)
				set {_memberUUID} to uuid of loop-value
				delete {%{_memberUUID}%.clanChat.%{playerclan::%{_memberUUID}%}%}
				delete {%{_memberUUID}%.playerTotalclanXp.%{playerclan::%{_memberUUID}%}%}
				delete {playerclan::%{_memberUUID}%}
			delete {clanMembersList.%{_name}%::*}
			updateScoreboard({_p})
		else:
			send "{@prefix} &7You must be the clan leader to do this!" to {_p}
	else:
		send "{@prefix} &7You must be in a clan to do this!" to {_p}


function clanInfo(p: offline player, name: object):
	open virtual chest with 6 rows named "&8Clan Info | %{_name}%" to {_p}
	set {_slots::*} to 0,1,2,3,4,5,6,7,8,9,10,12,14,16,17,18,19,20,21,22,23,24,25,26,27,35,36,44,45,46,47,48,49,50,51,52 and 53
	format gui slot {_slots::*} of {_p} with gray stained glass pane named "&f"
	format gui slot 13 of {_p} with skull of {clanLeader.%{_name}%} named "&d&lCLAN INFO" lored "&7||&dClan Name: &7%{_name}%||&dClan Leader: &7%{clanLeader.%{_name}%}%||&7||&dMembers: &7%{clanMembers.%{_name}%}%||&dMax Members: &7%{clanMaxMembers.%{_name}%}%||&7||&dClan Level: &7%{clanLevel.%{_name}%}%||&dClan XP: &7%{clanXp.%{_name}%}%&7/%{clanXpRequired.%{_name}%}%||&dClan XP/Min: &7%{clanXpPerMin.%{_name}%}% &d(per online player)||&dClan Points: &7%{clanPoints.%{_name}%}%||&7"                
	if {log.output.%{_name}%} is not set:
		set {_lore} to "&7Data unavialable..."
	else:
		set {_lore} to {log.output.%{_name}%}
	format gui slot 11 of {_p} with glowing book named "&d&lCLAN LOG" lored "&7%{_lore}%"
	format gui slot 15 of {_p} with bottle o' enchanting named "&d&lCLAN XP" lored "&7||&7Each clan member earns a certain xp/min||&7This only counts when the player is &donline||&7When you level up you gain &d100 Points||&7"
	set {_slot} to 27
	loop {clanMembersList.%{_name}%::*}:
		set {_loopUUID} to uuid of loop-value
		delete {_rankPrefix}
		if {clanAdmin.%{playerclan::%{_loopUUID}%}%::*} contains loop-value:
			set {_rankPrefix} to "&7Admin"
		if {clanLeader.%{playerclan::%{_loopUUID}%}%} is loop-value:
			set {_rankPrefix} to "&7Leader"
		if {_rankPrefix} is not set:
			set {_rankPrefix} to "&7Member"
		
		if "%loop-value%" parsed as player is not online:
			set {_online} to "&c (Offline)"
		else:
			set {_online} to "&d (Online)"
		
		add 1 to {_slot}
		if {_slot} is 35:
			add 2 to {_slot}
		set {_uuid} to uuid of loop-value
		format gui slot {_slot} of {_p} with skull of loop-value named "&7%loop-value%%{_online}%" lored "&7||&dClan Rank: %{_rankPrefix}%||&7This player has gained a total of &d%{%{_uuid}%.playerTotalclanXp.%{playerclan::%{_uuid}%}%}% &7xp||&7"

function clanInvite(p: offline player, name: object, leader: offline player):
	if {clanAdmin.%{_name}%::*} contains {_leader}:
		set {_allow} to true
	if {clanLeader.%{_name}%} is {_leader}:
		set {_allow} to true
	if {_allow} is true:
		if {clanMembers.%{_name}%} < {clanMaxMembers.%{_name}%}:
			set {pendingclanJoin.%{_p}%} to {_name}
			send "{@prefix} &7You have been invited to &d%{_name}%" to {_p}
			send "{@prefix} &7You have &d60 seconds &7before the invite expires" to {_p}
			loop {clanMembersList.%{_name}%::*}:
				send "{@prefix} &d%{_p}% &7has been invited to your clan!" to loop-value
			wait 1 minute
			delete {pendingclanJoin.%{_p}%}
		else:
			send "{@prefix} &7You have reached the member limit &d(/clan upgrade)" to {_leader}
	else:
		send "{@prefix} &7You must be the clan admin or leader!" to {_leader}
		
function clanJoin(p: player, name: text):
	set {_uuid} to uuid of {_p}
	if {playerclan::%{_uuid}%} is set:
		send "{@prefix} &7You are already in a clan!" to {_p}
	else:
		if {_name} is {pendingclanJoin.%{_p}%}:
			if {clanMembers.%{pendingclanJoin.%{_p}%}%} < {clanMaxMembers.%{pendingclanJoin.%{_p}%}%}:
				loop {clanMembersList.%{_name}%::*}:
					send "{@prefix} &d%{_p}% &7has joined your clan!" to loop-value
				updateLog({_name}, "&d%{_p}% &7has joined the clan &d(%now%&d)")
				set {playerclan::%{_uuid}%} to {pendingclanJoin.%{_p}%}
				set {%{_uuid}%.clanChat.%{_name}%} to false
				set {%{_uuid}%.playerTotalclanXp.%{playerclan::%{_uuid}%}%} to 0
				send "{@prefix} &7You have joined &d%{playerclan::%{_uuid}%}%" to {_p}
				add 1 to {clanMembers.%{playerclan::%{_uuid}%}%}
				add {_p} to {clanMembersList.%{playerclan::%{_uuid}%}%::*}
				updateScoreboard({_p})
			else:
				send "{@prefix} &7This clan is already full!" to {_p}
			
function clanKick(p: player, p2: offline player):
	set {_p1UUID} to uuid of {_p}
	set {_p2UUID} to uuid of {_p2}
	if {clanAdmin.%{playerclan::%{_p1UUID}%}%::*} contains {_p}:
		set {_allow} to true
	if {clanLeader.%{playerclan::%{_p1UUID}%}%} is {_p}:
		set {_allow} to true
	if {playerclan::%{_p1UUID}%} is set:
		if {_allow} is true:
			if {playerclan::%{_p1UUID}%} is {playerclan::%{_p2UUID}%}:
				if {_p} is not {_p2}:
					if {_p2} is {clanLeader.%{playerclan::%{_p1UUID}%}%}:
						send "{@prefix} &7You can't kick the clan leader!" to {_p}
						stop
					loop {clanMembersList.%{playerclan::%{_p1UUID}%}%::*}:
						send "{@prefix} &d%{_p2}% &7has been removed from the clan!" to loop-value
					updateLog({playerclan::%{_p1UUID}%}, "&d%{_p2}% &7was kicked from the clan &d(%now%&d)")
					if {clanAdmin.%{playerclan::%{_p1UUID}%}%::*} contains {_p2}:
						remove {_p2} from {clanAdmin.%{playerclan::%{_p1UUID}%}%::*}
					remove {_p2} from {clanMembersList.%{playerclan::%{_p1UUID}%}%::*}
					delete {%{_p2UUID}%.clanChat.%{playerclan::%{_p2UUID}%}%}
					delete {%{_p2UUID}%.playerTotalclanXp.%{playerclan::%{_p2UUID}%}%}
					delete {playerclan::%{_p2UUID}%}
					remove 1 from {clanMembers.%{playerclan::%{_p1UUID}%}%}
					updateScoreboard({_p2})
				else:
					send "{@prefix} &7You can't kick yourself from the clan!" to {_p}
		else:
			send "{@prefix} &7You must be the clan admin or leader to do this!" to {_p}
	else:
		send "{@prefix} &7You must be in a clan to do this!" to {_p}

function clanLeave(p: player):
	set {_uuid} to uuid of {_p}
	if {playerclan::%{_uuid}%} is set:
		if {clanLeader.%{playerclan::%{_uuid}%}%} is not {_p}:
			loop {clanMembersList.%{playerclan::%{_uuid}%}%::*}:
				send "{@prefix} &d%{_p}% &7has left the clan!" to loop-value
			updateLog({playerclan::%{_uuid}%}, "&d%{_p}% &7has left the clan &d(%now%&d)")
			remove {_p} from {clanMembersList.%{playerclan::%{_uuid}%}%::*}
			if {clanAdmin.%{playerclan::%{_uuid}%}%::*} contains {_p}:
				remove {_p} from {clanAdmin.%{playerclan::%{_uuid}%}%::*}
			remove 1 from {clanMembers.%{playerclan::%{_uuid}%}%}
			delete {%{_uuid}%.clanChat.%{playerclan::%{_uuid}%}%}
			delete {%{_uuid}%.playerTotalclanXp.%{playerclan::%{_uuid}%}%}
			delete {playerclan::%{_uuid}%}
			updateScoreboard({_p})
		else:
			send "{@prefix} &7The clan leader can't leave the clan!" to {_p}
	else:
		send "{@prefix} &7You are not in a clan!" to {_p}



function clanUpgrade(p: player):
	set {_uuid} to uuid of {_p}
	if {clanAdmin.%{playerclan::%{_uuid}%}%::*} contains {_p}:
		set {_allow} to true
	if {clanLeader.%{playerclan::%{_uuid}%}%} is {_p}:
		set {_allow} to true
	if {playerclan::%{_uuid}%} is set:
		open virtual chest with 3 rows named "&8Clan Upgrade | %{playerclan::%{_uuid}%}%" to {_p}
		format gui slot 16 of {_p} with barrier named "&d&lComing Soon..."
		format gui slot 14 of {_p} with barrier named "&d&lComing Soon..."
		if {clanMaxMembers.%{playerclan::%{_uuid}%}%} < 14:
			format gui slot 12 of {_p} with player head named "&d&lClan Member Limit" lored "&7||&7Increase your clan member limit from &d%{clanMaxMembers.%{playerclan::%{_uuid}%}%}% &7to &d%({clanMaxMembers.%{playerclan::%{_uuid}%}%}+1)%||&7||&dCost: &7%{clanMaxMembers.%{playerclan::%{_uuid}%}%}*250% &7Points||&7" to run:
				if {_allow} is not true:
					close {_p}'s inventory
					send "{@prefix} &7You must be the clan admin or leader to do this!" to {_p}
					stop
				set {_price} to {clanMaxMembers.%{playerclan::%{_uuid}%}%}*250
				if {clanPoints.%{playerclan::%{_uuid}%}%} >= {_price}:
					remove {_price} from {clanPoints.%{playerclan::%{_uuid}%}%}
					add 1 to {clanMaxMembers.%{playerclan::%{_uuid}%}%}
					updateLog({playerclan::%{_uuid}%}, "&d%{_p}% &7Upgraded the member limit to %{clanMaxMembers.%{playerclan::%{_uuid}%}%}% &d(%now%&d)")
					close {_p}'s inventory
					send "{@prefix} &7Your new member limit is &d%{clanMaxMembers.%{playerclan::%{_uuid}%}%}%" to {_p}
				else:
					close {_p}'s inventory
					send "{@prefix} &7You need &d%{_price}% &7clan points for this. &d(You have %{clanPoints.%{playerclan::%{_uuid}%}%}%&d)" to {_p}
		else:
			format gui slot 12 of {_p} with barrier named "&d&lClan Member Limit" lored "&7||&7Maxed...||&7"
			
		format gui slot 10 of {_p} with bottle o' enchanting named "&d&lClan XP/Min" lored "&7||&7Increase your clan xp/min||&7Every online member is currently earning %{clanXpPerMin.%{playerclan::%{_uuid}%}%}%||&7Upgrading this will increase it to &d%({clanXpPerMin.%{playerclan::%{_uuid}%}%}+1)%&d/min||&7||&dCost: &7%{clanXpPerMin.%{playerclan::%{_uuid}%}%}*1000% &7Points||&7" to run:
			if {_allow} is not true:
				close {_p}'s inventory
				send "{@prefix} &7You must be the clan admin or leader to do this!" to {_p}
				stop
			set {_price2} to {clanXpPerMin.%{playerclan::%{_uuid}%}%}*1000
			if {clanPoints.%{playerclan::%{_uuid}%}%} >= {_price2}:
				remove {_price2} from {clanPoints.%{playerclan::%{_uuid}%}%}
				add 1 to {clanXpPerMin.%{playerclan::%{_uuid}%}%}
				close {_p}'s inventory
				send "{@prefix} &7Your new xp/min is &d%{clanXpPerMin.%{playerclan::%{_uuid}%}%}%" to {_p}
				updateLog({playerclan::%{_uuid}%}, "&d%{_p}% &7Upgraded the clan xp/min to %{clanXpPerMin.%{playerclan::%{_uuid}%}%}% &d(%now%&d)")
			else:
				close {_p}'s inventory
				send "{@prefix} &7You need &d%{_price2}% &7clan points for this. &d(You have %{clanPoints.%{playerclan::%{_uuid}%}%}%&d)" to {_p}
	else:
		send "{@prefix} &7You must be in a clan to do this!" to {_p}
		
		
		
	
		
		
		
function clanPromote(p: player, p2: offline player):
	set {_p1UUID} to uuid of {_p}
	set {_p2UUID} to uuid of {_p2}
	if {_p} is {_p2}:
		send "{@prefix} &7You can't promote yourself!" to {_p}
		stop
	if {playerclan::%{_p1UUID}%} is {playerclan::%{_p2UUID}%}:
		if {clanAdmin.%{playerclan::%{_p1UUID}%}%::*} does not contain {_p2}:
			add {_p2} to {clanAdmin.%{playerclan::%{_p1UUID}%}%::*}
			updateLog({playerclan::%{_p1UUID}%}, "&d%{_p2}% &7was promoted to clan admin &d(%now%&d)")
			loop {clanMembersList.%{playerclan::%{_p1UUID}%}%::*}:
				send "{@prefix} &d%{_p2}% &7has been promoted to clan admin!" to loop-value
		else:
			send "{@prefix} &7This player is already a clan admin!" to {_p}
	else:
		send "{@prefix} &7This player isn't in your clan!" to {_p}
function clanDemote(p: player, p2: offline player):
	set {_p1UUID} to uuid of {_p}
	set {_p2UUID} to uuid of {_p2}
	if {_p} is {_p2}:
		send "{@prefix} &7You can't demote yourself!" to {_p}
		stop
	if {playerclan::%{_p1UUID}%} is {playerclan::%{_p2UUID}%}:
		if {clanAdmin.%{playerclan::%{_p1UUID}%}%::*} contains {_p2}:
			remove {_p2} from {clanAdmin.%{playerclan::%{_p1UUID}%}%::*}
			updateLog({playerclan::%{_p1UUID}%}, "&d%{_p2}% &7was demoted to clan member &d(%now%&d)")
			loop {clanMembersList.%{playerclan::%{_p1UUID}%}%::*}:
				send "{@prefix} &d%{_p2}% &7has been demoted to clan member!" to loop-value
		else:
			send "{@prefix} &7This player can't be demoted further!" to {_p}
	else:
		send "{@prefix} &7This player isn't in your clan!" to {_p}

function clanStats(p: player, name: object):
	send "" to {_p}
	send "&8Â» &d&lSTATS &8(&f%{_name}%&8)" to {_p}
	send "" to {_p}
	send "&8Â» &dMembers: &7%{clanMembers.%{_name}%}%&8/&7%{clanMaxMembers.%{_name}%}%" to {_p}
	send "" to {_p}
	send "&8Â» &dLevel: &7%{clanLevel.%{_name}%}% &8| &8(&7%{clanXp.%{_name}%}%&8/&7%{clanXpRequired.%{_name}%}%&8)" to {_p}
	send "&8Â» &dPoints: &7%{clanPoints.%{_name}%}%" to {_p}
	send "" to {_p}

function clanHelp(p: player, page: integer):
	if {_page} = 1:
		send "" to {_p}
		send "&d&lCLANS HELP &8(&fPage 1&8/&f2&8)" to {_p}
		send "" to {_p}
		send "&8Â» &d/clan create <name> &7Creates a clan." to {_p}
		send "&8Â» &d/clan invite <player> &7Invites a player to your clan" to {_p}
		send "&8Â» &d/clan join <name> &7Allows you to join clans." to {_p}
		send "&8Â» &d/clan leave &7Allows you to leave your clan." to {_p}
		send "&8Â» &d/clan chat &7Toggles clan chat mode." to {_p}
		send "&8Â» &d/clan help 2 &7Shows the next help page." to {_p}
		send "" to {_p}
	else if {_page} = 2:
		send "" to {_p}
		send "&d&lCLANS HELP &8(&fPage 2&8/&f2&8)" to {_p}
		send "" to {_p}
		send "&8Â» &d/clan kick <player> &7Kicks a player from your clan." to {_p}
		send "&8Â» &d/clan upgrade &7Upgrade your clan." to {_p}
		send "&8Â» &d/clan delete &7Delete your clan." to {_p}
		send "&8Â» &d/clan <promote/demote> <player>" to {_p}
		send "&8Â» &d/clan info <player/clan> &7Shows your entered clans info." to {_p}
		send "&8Â» &d/clan stats <player/clan> &7Shows your entered clans stats." to {_p}
		send "" to {_p}
	else:
		send "{@prefix} &7There are only 2 pages &d/clan help <page>" to {_p}

function clanList(p: player, page: integer):
	set {_last} to ({_page}*6)
	set {_first} to {_last}-6
	send "" to {_p}
	send "&d&lCLAN LIST &8(&fPage %{_page}%&8)" to {_p}
	send "" to {_p}
	loop {clanList::*}:
		set {_index} to (loop-index) parsed as integer
		remove 1 from {_index}
		if {_index} is between {_first} and ({_last}-1):
			send "&8Â» &d%loop-value% &8| &7%{clanMembers.%loop-value%}%&8/&7%{clanMaxMembers.%loop-value%}% &7Members" to {_p}
	send "" to {_p}

command /clan [<text>] [<text>] [<text>]:
	aliases: clans
	trigger:
		if arg-1 is "create":
			if arg-2 is set:
				createclan(arg-2, player)
			else:
				send "{@prefix} &7Invalid syntax: use &d/clan create <name>"
		else if arg-1 is "delete" or "disband":
			deleteclan(player)
		
		else if arg-1 is "info":
			if arg-2 is not set:
				if {playerclan::%player's uuid%} is set:
					clanInfo(player, {playerclan::%player's uuid%})
				else:
					send "{@prefix} &7You are not in a clan. Use &d/clan info <player/clan>"
			else:
				if {clanList::*} contains arg-2:
					loop {clanList::*}:
						if "%loop-value%" is arg-2:
							clanInfo(player, loop-value)
				else:
						
					set {_p} to arg-2 parsed as offline player
					set {_pUUID} to uuid of {_p}
					if {playerclan::%{_pUUID}%} is set:
						clanInfo(player, {playerclan::%{_pUUID}%})
					else:
						send "{@prefix} &7clan not found! &d(/clan info <player/clan>)"
		else if arg-1 is "invite":
			if arg-2 is not set:
				send "{@prefix} &7Invalid syntax: use &d/clan invite <player>"
			else:
				if {playerclan::%player's uuid%} is set:
					set {_playerInvited} to arg-2 parsed as offline player
					clanInvite({_playerInvited}, {playerclan::%player's uuid%}, player)
				else:
					send "{@prefix} &7You must be in a clan to do this!"
		else if arg-1 is "join":
			if arg-2 is not set:
				send "{@prefix} &7Invalid syntax: use &d/clan join <clan>"
			else:
				clanJoin(player, arg-2)
		else if arg-1 is "kick":
			if arg-2 is not set:
				send "{@prefix} &7Invalid syntax: use &d/clan kick <player>"
			else:
				clanKick(player, arg-2 parsed as offline player)
		else if arg-1 is "chat":
			if {playerclan::%player's uuid%} is set:
				if {%player's uuid%.clanChat.%{playerclan::%player's uuid%}%} is false: 
					set {%player's uuid%.clanChat.%{playerclan::%player's uuid%}%} to true
					send "{@prefix} &7clan chat has been enabled &d(/clan chat)"
				else:
					set {%player's uuid%.clanChat.%{playerclan::%player's uuid%}%} to false
					send "{@prefix} &7clan chat has been disabled &d(/clan chat)"
			else:
				send "{@prefix} &7You must be in a clan to do this!"
		else if arg-1 is "leave":
			clanLeave(player)
		
		else if arg-1 is "upgrade":
			clanUpgrade(player)
		
		else if arg-1 is "promote":
			if {playerclan::%player's uuid%} is set:
				if {clanLeader.%{playerclan::%player's uuid%}%} is player:
					clanPromote(player, arg-2 parsed as offline player)
				else:
					send "{@prefix} &7You must be the clan leader to do this!"
			else:
				send "{@prefix} &7You must be in a clan to do this!"
		else if arg-1 is "demote":
			if {playerclan::%player's uuid%} is set:
				if {clanLeader.%{playerclan::%player's uuid%}%} is player:
					clanDemote(player, arg-2 parsed as offline player)
				else:
					send "{@prefix} &7You must be the clan leader to do this!"
			else:
				send "{@prefix} &7You must be in a clan to do this!"	
		else if arg-1 is "stats":
			if arg-2 is not set:
				if {playerclan::%player's uuid%} is set:
					clanStats(player, {playerclan::%player's uuid%})
				else:
					send "{@prefix} &7You are not in a clan. Use &d/clan stats <player/clan>"
			else:
				if {clanList::*} contains arg-2:
					loop {clanList::*}:
						if "%loop-value%" is arg-2:
							clanStats(player, loop-value)
				else:
						
					set {_p} to arg-2 parsed as offline player
					set {_pUUID} to uuid of {_p}
					if {playerclan::%{_pUUID}%} is set:
						clanStats(player, {playerclan::%{_pUUID}%})
					else:
						send "{@prefix} &7clan not found! &d(/clan stats <player/clan>)"
		else if arg-1 is "list":
			if arg-2 is not set:
				send "{@prefix} &7Please include a page number! &d(/clan list <page>)"
			else:
				set {_arg-2} to arg-2 parsed as integer
				if {_arg-2} is not set:
					send "{@prefix} &7Please include a page number! &d(/clan list <page>)"
					stop
				clanList(player, {_arg-2})
		
		else:
			if arg-1 is "help":
				if arg-2 is set:
					set {_page} to arg-2 parsed as integer
					if {_page} is set:
						clanHelp(player, {_page})
					else:
						clanHelp(player, 1)
				else:
					clanHelp(player, 1)
			else:
				clanHelp(player, 1)
		
		
				
					
	
every minute:
	loop all players:
		if {playerclan::%loop-player's uuid%} is set:
			add {clanXpPerMin.%{playerclan::%loop-player's uuid%}%} to {clanXp.%{playerclan::%loop-player's uuid%}%}
			add {clanXpPerMin.%{playerclan::%loop-player's uuid%}%} to {%loop-player's uuid%.playerTotalclanXp.%{playerclan::%loop-player's uuid%}%}
			
	loop {clanList::*}:
		if {clanXp.%loop-value%} >= {clanXpRequired.%loop-value%}:
			add 1 to {clanLevel.%loop-value%}
			add 100 to {clanPoints.%loop-value%}
			add 1000 to {clanXpRequired.%loop-value%}
			if {clanLevel.%loop-value%} > 15:
				add 1500 to {clanXpRequired.%loop-value%}
			updateLog(loop-value, "&7Your clan is now level &7%{clanLevel.%loop-value%}% &d(%now%&d)")
			loop {clanMembersList.%loop-value%::*}:
				send "{@prefix} &7Your clan is now level &d%{clanLevel.%loop-value-1%}%" to loop-value-2